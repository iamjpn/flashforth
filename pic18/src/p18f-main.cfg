;**********************************************************************
;                                                                     *
;    Filename:      p18f-main.cfg                                     *
;    Date:          26.02.2017                                        *
;    FF Version:    5.0                                               *
;    Copyright:     Mikael Nordman                                    *
;    Author:        Mikael Nordman                                    *
;                                                                     * 
;    Modified:                                                        *
;**********************************************************************
;    FlashForth is licensed acording to the GNU General Public License*
;**********************************************************************
;;; FlashForth processor main configuration file

#define ENABLE 1
#define DISABLE 0
#define POSITIVE 1
#define NEGATIVE 0

#define CONFIG_RESET     0x0000  ; No bootloader, application start at 0x0000
                                 ; Link with FF_0000.lkr or FF_USB_0000.lkr
;#define CONFIG_RESET     0x0800  ; Bootloader, application start at 0x0800
                                 ; Link with FF_0800.lkr or FF_USB_0800.lkr

;;; Comment out if the device is not from the K42 series 
#define K42

;;;  Specify the cpu clock frequency here
;;;  It must be aligned with the processor specific configuration bits 
;;;  In case of bootloader, it is the boot loader configuration that
;;;  determines the clock frequency.

 constant clock=d'64000000'  ; Hz

;;; Specify RS-232 the baud rate for UART1 (TX1, RX1)
 constant baud=d'38400'

;;; The default number base
#define DEFAULT_BASE d'10'

;;; Enable or disable multitasking support
#define MULTITASKING ENABLE

;;; Define which timer is stepping TICKS and MS.
;;; Timer 1 2 3 4 5 6 can be used
#define MS_TMR 1
;;; TMR 2 4 6 gives exactly 1 ms ticks only with clocks like 4096, 8192, 16384 KHz. N*256KHz.

;;; Allow warm reset by ctrl-O
#define CTRL_O_WARM_RESET ENABLE     ; ENABLE or DISABLE

;;; Put CPU in idle mode when all tasks are idle
;;; Saves power on CPUs that support IDLE mode.
;;; IDLE_MODE does not work with the inbuilt USB tranceiver.
#define IDLE_MODE DISABLE   ; ENABLE or DISABLE

;;; Measure CPU load, uses TIMER0. Needs IDLE_MODE ENABLE
#define CPU_LOAD DISABLE    ; ENABLE or DISABLE

;;; CPU load indicator led definitions. Needs IDLE_MODE.
#define CPU_LOAD_LED DISABLE          ; ENABLE or DISABLE
#define CPU_LOAD_TRIS TRISC
#define CPU_LOAD_PORT LATC
#define CPU_LOAD_BIT 1
#define CPU_LOAD_LED_POLARITY POSITIVE   ; POSITIVE or NEGATIVE

;;; Define the startup delay for turnkey words.
#define TURNKEY_DELAY d'2000'  ; Milliseconds

;;; Define if 8-bit characters should be sent by TX1
;;; Use with HW flow control and without ctrl-O reset for 
;;; full binary character set.
#define USE_8BIT_ASCII ENABLE     ; ENABLE or DISABLE

;;; Define if UART 1 or 2 is to be used
#define UART 1              ; 1 (=UART 1) or 2 (=UART 2)

;;; Define if USB or UART is used for the operator task
#define USB_OPERATOR_UART 1 ; 1 (=UART) or 0 ( = inbuilt USB)

;;; UART buffer size. Must be a power of 2. max size 128 bytes.
;;; With the default linker files the maximum RX_BUF_SIZE is d'64'
  
;;; Larger RX buffer size may be needed for high latency flow control
 constant RX_BUF_SIZE = d'32'
 
;;; Define the RX buffer fill level for XOFF or
;;; Define the RX buffer fill level for CTS off
;;; Smaller fill levels for RX_OFF_FILL may be needed for high latency flow control
 constant RX_OFF_FILL = d'4'

;;; Flow control defintions ********************************

;;; Use SW flow control XON/XOFF as default
#define FC_TYPE_SW ENABLE    ; ENABLE OR DISABLE

;;; If SW flow control is disabled, HW flow control is enabled.
#if FC_TYPE_SW == DISABLE
; Clear To Send to the computer, DB9 PIN 8
#define HW_FC_CTS_PORT LATC
#define HW_FC_CTS_TRIS TRISC
#define HW_FC_CTS_PIN  5

;;; Define if also RTS flow control should be included
;;; RTS lets the terminal control if FF is allowed to transmit data
; #define HW_FC_RTS ; Comment out to leave out RTS

; Request To Send from the computer, DB9 PIN 7.
#ifdef HW_FC_RTS
#define HW_FC_RTS_PORT PORTC
#define HW_FC_RTS_TRIS TRISC
#define HW_FC_RTS_PIN  4
#endif  ; HW_FC_RTS
#endif

; If you nest PAUSE shallower, the return stack size save area can be decreased
; Max needed size is d'67' bytes
#define RETURN_STACK_SAVE_SIZE d'32'    ; 16 cells return stack save area is usually enough
#define PARAMETER_STACK_SIZE d'60'      ; 30 cells parameter stack
#define TIB_SIZE d'76'                  ; 76 chars tib size 
#define HOLD_SIZE d'10'                 ; 10 chars hold area

;;; Storage space for OPERATOR uservariables 2 and upwards
;;; EXAMPLE: 8 user myUserVar  -> define UADDSIZE 8
#define UADDSIZE d'0'

; Define the parameter stack size to be used by Forth interrupt words
#define PARAMETER_STACK_SIZE_IRQ h'10'

;;; X! Requires disabling cpu load measurement or multitasking or increase of codei page size in linker file
#define XSTORE DISABLE


;;; Calculate the baud rate control value
        constant spbrgval = ((clock/baud)/d'16') - 1

;;; Constant for the MS word.
        constant tmr2prescaler = d'4'
        constant tmr2postscaler = d'16'
        constant tmr2ms_val=(clock/d'4000'/tmr2prescaler/tmr2postscaler)-1
        constant tmr1prescaler = d'1'
        constant tmr1ms_val=(clock/d'4000'/tmr1prescaler)-d'6'

;;; Calculate the program memory write delay
        constant clock_MHZ = clock / d'1000000'
        constant write_delay = (clock_MHZ / d'4') + 1  

;;; Calculate the scaling factor for cpu load measurement
        constant CPU_LOAD_VAL = clock / d'1570'

;;; If there is a PPS (Peripheral Pin Select) enable here
#define PPS ENABLE    ; ENABLE OR DISABLE

;;; Define UART pins for PPS
#if PPS == ENABLE
; Choose UART TX pin
#define TX_TRIS  TRISC
#define TX_ANSEL ANSELC
#define TX_BIT   6
#define TX_PPS   RC6PPS 

; Choose UART RX pin
#define RX_TRIS  TRISC
#define RX_ANSEL ANSELC
#define RX_BIT   7
#define RX_PPS   b'00010111' ; from datasheet
#endif 


